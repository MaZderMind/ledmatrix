#ifndef __DATA_H
#define __DATA_H

#include <avr/pgmspace.h>

#define C_ON 1
#define C_OFF 2
#define C_SLEEP 3
#define C_FRAME 4

#define C_T2B_SCROLL 5

#define LEN(x) (sizeof(x) / sizeof(x[0]))

const uint8_t frame_diagonal[] PROGMEM = {
	0b1100000,
	0b1110000,
	0b0111000,
	0b0011100,
	0b0001110,
	0b0000111,
	0b0000011,
};

const uint8_t strip_hello[] PROGMEM = {
	0b0000000,
	0b0000000,
	0b0100100,
	0b0100100,
	0b0111100,
	0b0100100,
	0b0100100,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0010000,
	0b0111000,
	0b0101000,
	0b0111000,
	0b1000100,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0111000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0111000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0011000,
	0b0100100,
	0b0100100,
	0b0100100,
	0b0011000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0100100,
	0b0100100,
	0b0111100,
	0b0100100,
	0b0100100,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0010000,
	0b0111000,
	0b0101000,
	0b0111000,
	0b1000100,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0111100,
	0b0100000,
	0b0011100,
	0b0000100,
	0b0111100,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b1100011,
	0b1100011,
	0b0001000,
	0b0000000,
	0b0000101,
	0b0000010,
	0b0000101
};

const uint8_t strip_osm[] PROGMEM = {
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0111010,
	0b0101110,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0001010,
	0b0111110,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111100,
	0b0000000,
	0b0100010,
	0b0111110,
	0b0100010,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111110,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111110,
	0b0000000,
	0b0101110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0111010,
	0b0000000,
	0b0111110,
	0b0000100,
	0b0001000,
	0b0000100,
	0b0111110,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0001000,
	0b0001000,
	0b0001000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111100,
	0b0000000,
	0b0111110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0111010,
	0b0101110,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111100,
	0b0000000,
	0b0111110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0000000,
	0b0111110,
	0b0100000,
	0b0100000,
	0b0100000,
	0b0111110,
	0b0000000,
	0b0000010,
	0b0000010,
	0b0111110,
	0b0000010,
	0b0000010,
	0b0000000,
	0b0101110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0111010,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0000000,
	0b0111110,
	0b0001000,
	0b0001000,
	0b0001000,
	0b0111110,
	0b0000000,
	0b0111110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111110,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0001010,
	0b0001110,
	0b0000000,
	0b0111110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0000000,
	0b0111110,
	0b0000100,
	0b0001000,
	0b0010000,
	0b0111110,
	0b0000000,
	0b0101110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0111010,
	0b0000000,
	0b0000010,
	0b0000010,
	0b0111110,
	0b0000010,
	0b0000010,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0111010,
	0b0101110,
	0b0000000,
	0b0111110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0000000,
	0b0111110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0000000,
	0b0000010,
	0b0000010,
	0b0111110,
	0b0000010,
	0b0000010,
	0b0000000,
	0b0111110,
	0b0000100,
	0b0001000,
	0b0000100,
	0b0111110,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0001010,
	0b0111110,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0001010,
	0b0001110,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0001010,
	0b0001110,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111110,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0111100,
	0b0000000,
	0b0111110,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0100010,
	0b0000000,
	0b0111110,
	0b0001010,
	0b0001010,
	0b0001010,
	0b0111110,
	0b0000000,
	0b0101110,
	0b0101010,
	0b0101010,
	0b0101010,
	0b0111010,
	0b0000000,
	0b0000010,
	0b0000010,
	0b0111110,
	0b0000010,
	0b0000010,
	0b0000000,
	0b0101110,
	0b0000000,
	0b0000000
};


const uint16_t cmds[] PROGMEM = {
	C_ON,
	C_SLEEP,
	100,
	C_OFF,
	C_SLEEP,
	100,

	C_FRAME,
	(uint16_t)&frame_diagonal,

	C_SLEEP,
	100,

/*
	C_R2L_SCROLL,
	pixels,
*/

	C_T2B_SCROLL,
	(uint16_t)&strip_hello,
	LEN(strip_hello),
	15,

	C_SLEEP,
	500,

	C_T2B_SCROLL,
	(uint16_t)&strip_osm,
	LEN(strip_osm),
	20,

	C_SLEEP,
	500
};
const uint8_t ncmd = LEN(cmds);

#endif // __DATA_H
